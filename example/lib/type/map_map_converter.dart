import '../../../example/lib/type/map.dart' as i1;
import '../../../example/lib/person/person_map_converter.dart' as i2;
import '../../../example/lib/person/person.dart' as i3;

/// Do not make changes to this file!
/// This file is generated by package: map_converter
/// Input: map_converter/example/lib/type/map.dart
/// Generate command: dart run build_runner build --delete-conflicting-outputs
/// For more information see: https://pub.dev/packages/map_converter
i1.Example mapToExample(Map<String, dynamic> exampleMap) => i1.Example()
  ..mapWithPrimitiveKeyAndPrimitiveValue =
      (exampleMap['mapWithPrimitiveKeyAndPrimitiveValue'] as Map).map(
    (k, v) => MapEntry(k, (v as num).toInt()),
  )
  ..nullableMapWithPrimitiveKeyAndPrimitiveValue =
      (exampleMap['nullableMapWithPrimitiveKeyAndPrimitiveValue'] as Map?)
          ?.map((k, v) => MapEntry((k as num).toInt(), v as bool))
  ..mapWithPrimitiveKeyAndPrimitiveNullableValue =
      (exampleMap['mapWithPrimitiveKeyAndPrimitiveNullableValue'] as Map)
          .map((k, v) => MapEntry((k as num).toDouble(), v as String?))
  ..mapWithPrimitiveKeyAndComplexValue =
      (exampleMap['mapWithPrimitiveKeyAndComplexValue'] as Map).map(
    (k, v) => MapEntry(
      (k as num).toInt(),
      i2.mapToPerson(v as Map<String, dynamic>),
    ),
  )
  ..mapWithPrimitiveKeyAndComplexNullableValue =
      (exampleMap['mapWithPrimitiveKeyAndComplexNullableValue'] as Map).map(
    (k, v) => MapEntry(
      (k as num).toInt(),
      v == null ? null : i2.mapToPerson(v as Map<String, dynamic>),
    ),
  )
  ..mapWithPrimitiveKeyAndListValue =
      (exampleMap['mapWithPrimitiveKeyAndListValue'] as Map).map(
    (k, v) => MapEntry(
      (k as num).toInt(),
      v
          .map(
            (listElement) =>
                i2.mapToPerson(listElement as Map<String, dynamic>),
          )
          .toList()
          .cast<i3.Person>(),
    ),
  )
  ..mapWithPrimitiveKeyAndNullableListValue =
      (exampleMap['mapWithPrimitiveKeyAndNullableListValue'] as Map).map(
    (k, v) => MapEntry(
      (k as num).toInt(),
      v
          ?.map(
            (listElement) => i3.Gender.values.firstWhere(
              (enumValue) => enumValue.name == listElement,
            ),
          )
          .toList()
          .cast<i3.Gender>(),
    ),
  )
  ..mapWithPrimitiveKeyAndMapValue =
      (exampleMap['mapWithPrimitiveKeyAndMapValue'] as Map).map(
    (k, v) => MapEntry(
      (k as num).toInt(),
      (v as Map).map(
        (k, v) => MapEntry(
          (k as num).toInt(),
          v == null ? null : i2.mapToPerson(v as Map<String, dynamic>),
        ),
      ),
    ),
  )
  ..mapWithPrimitiveKeyAndNullableMapValue =
      (exampleMap['mapWithPrimitiveKeyAndNullableMapValue'] as Map).map(
    (k, v) => MapEntry(
      (k as num).toInt(),
      (v as Map?)?.map(
        (k, v) => MapEntry(
          (k as num).toInt(),
          i3.Gender.values.firstWhere(
            (enumValue) => enumValue.name == v,
          ),
        ),
      ),
    ),
  );
Map<String, dynamic> exampleToMap(i1.Example example) => {
      'mapWithPrimitiveKeyAndPrimitiveValue':
          example.mapWithPrimitiveKeyAndPrimitiveValue,
      'nullableMapWithPrimitiveKeyAndPrimitiveValue':
          example.nullableMapWithPrimitiveKeyAndPrimitiveValue,
      'mapWithPrimitiveKeyAndPrimitiveNullableValue':
          example.mapWithPrimitiveKeyAndPrimitiveNullableValue,
      'mapWithPrimitiveKeyAndComplexValue': example
          .mapWithPrimitiveKeyAndComplexValue
          .map((k, v) => MapEntry(k, i2.personToMap(v))),
      'mapWithPrimitiveKeyAndComplexNullableValue': example
          .mapWithPrimitiveKeyAndComplexNullableValue
          .map((k, v) => MapEntry(k, v == null ? null : i2.personToMap(v))),
      'mapWithPrimitiveKeyAndListValue':
          example.mapWithPrimitiveKeyAndListValue.map(
        (k, v) => MapEntry(
          k,
          v
              .map((i3.Person listElement) => i2.personToMap(listElement))
              .toList(),
        ),
      ),
      'mapWithPrimitiveKeyAndNullableListValue':
          example.mapWithPrimitiveKeyAndNullableListValue.map(
        (k, v) => MapEntry(
          k,
          v?.map((i3.Gender listElement) => listElement.name).toList(),
        ),
      ),
      'mapWithPrimitiveKeyAndMapValue':
          example.mapWithPrimitiveKeyAndMapValue.map(
        (k, v) => MapEntry(
          k,
          v.map((k, v) => MapEntry(k, v == null ? null : i2.personToMap(v))),
        ),
      ),
      'mapWithPrimitiveKeyAndNullableMapValue': example
          .mapWithPrimitiveKeyAndNullableMapValue
          .map((k, v) => MapEntry(k, v?.map((k, v) => MapEntry(k, v.name)))),
    };
