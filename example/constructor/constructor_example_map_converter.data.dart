import '../../example/constructor/constructor_example.domain.dart' as i1;

/// Do not make changes to this file!
/// This file is generated by: MapConverterBuilder
/// From: asset:map_converter/example/constructor/constructor_example.domain.dart
/// Generate command: dart run build_runner build --delete-conflicting-outputs
/// For more information see: https://pub.dev/packages/map_converter
Map<String, dynamic> defaultConstructorExampleToMap(
        i1.DefaultConstructorExample defaultConstructorExample) =>
    {
      'property1': defaultConstructorExample.property1,
      'property2': defaultConstructorExample.property2
    };
i1.DefaultConstructorExample mapToDefaultConstructorExample(
        Map<String, dynamic> defaultConstructorExampleMap) =>
    i1.DefaultConstructorExample()
      ..property1 = defaultConstructorExampleMap['property1'] as String
      ..property2 = defaultConstructorExampleMap['property2'] as String?;
Map<String, dynamic> constructorExampleToMap(
        i1.ConstructorExample constructorExample) =>
    {
      'property1': constructorExample.property1,
      'property2': constructorExample.property2
    };
i1.ConstructorExample mapToConstructorExample(
        Map<String, dynamic> constructorExampleMap) =>
    i1.ConstructorExample()
      ..property1 = constructorExampleMap['property1'] as String
      ..property2 = constructorExampleMap['property2'] as String?;
Map<String, dynamic> constructorWithRequiredPositionalParametersExampleToMap(
        i1.ConstructorWithRequiredPositionalParametersExample
            constructorWithRequiredPositionalParametersExample) =>
    {
      'property1': constructorWithRequiredPositionalParametersExample.property1,
      'property2': constructorWithRequiredPositionalParametersExample.property2,
      'property3': constructorWithRequiredPositionalParametersExample.property3,
      'property4': constructorWithRequiredPositionalParametersExample.property4
    };
i1.ConstructorWithRequiredPositionalParametersExample
    mapToConstructorWithRequiredPositionalParametersExample(
            Map<String, dynamic>
                constructorWithRequiredPositionalParametersExampleMap) =>
        i1.ConstructorWithRequiredPositionalParametersExample(
            constructorWithRequiredPositionalParametersExampleMap['property1']
                as String,
            constructorWithRequiredPositionalParametersExampleMap['property2']
                as String?)
          ..property3 =
              constructorWithRequiredPositionalParametersExampleMap['property3']
                  as String
          ..property4 =
              constructorWithRequiredPositionalParametersExampleMap['property4']
                  as String?;
Map<String, dynamic> constructorWithNamedParametersExampleToMap(
        i1.ConstructorWithNamedParametersExample
            constructorWithNamedParametersExample) =>
    {
      'property1': constructorWithNamedParametersExample.property1,
      'property2': constructorWithNamedParametersExample.property2,
      'property3': constructorWithNamedParametersExample.property3,
      'property4': constructorWithNamedParametersExample.property4
    };
i1.ConstructorWithNamedParametersExample
    mapToConstructorWithNamedParametersExample(
            Map<String, dynamic> constructorWithNamedParametersExampleMap) =>
        i1.ConstructorWithNamedParametersExample(
            property1:
                constructorWithNamedParametersExampleMap['property1'] as String,
            property2: constructorWithNamedParametersExampleMap['property2']
                as String?)
          ..property3 =
              constructorWithNamedParametersExampleMap['property3'] as String
          ..property4 =
              constructorWithNamedParametersExampleMap['property4'] as String?;
Map<String, dynamic>
    constructorWithRequiredPositionalParametersAndNamedParametersExampleToMap(
            i1.ConstructorWithRequiredPositionalParametersAndNamedParametersExample
                constructorWithRequiredPositionalParametersAndNamedParametersExample) =>
        {
          'property1':
              constructorWithRequiredPositionalParametersAndNamedParametersExample
                  .property1,
          'property2':
              constructorWithRequiredPositionalParametersAndNamedParametersExample
                  .property2,
          'property3':
              constructorWithRequiredPositionalParametersAndNamedParametersExample
                  .property3,
          'property4':
              constructorWithRequiredPositionalParametersAndNamedParametersExample
                  .property4,
          'property5':
              constructorWithRequiredPositionalParametersAndNamedParametersExample
                  .property5,
          'property6':
              constructorWithRequiredPositionalParametersAndNamedParametersExample
                  .property6
        };
i1.ConstructorWithRequiredPositionalParametersAndNamedParametersExample
    mapToConstructorWithRequiredPositionalParametersAndNamedParametersExample(
            Map<String, dynamic>
                constructorWithRequiredPositionalParametersAndNamedParametersExampleMap) =>
        i1.ConstructorWithRequiredPositionalParametersAndNamedParametersExample(
            constructorWithRequiredPositionalParametersAndNamedParametersExampleMap['property1']
                as String,
            constructorWithRequiredPositionalParametersAndNamedParametersExampleMap['property2']
                as String?,
            property3:
                constructorWithRequiredPositionalParametersAndNamedParametersExampleMap['property3']
                    as String,
            property4:
                constructorWithRequiredPositionalParametersAndNamedParametersExampleMap['property4']
                    as String?)
          ..property5 =
              constructorWithRequiredPositionalParametersAndNamedParametersExampleMap[
                  'property5'] as String
          ..property6 =
              constructorWithRequiredPositionalParametersAndNamedParametersExampleMap['property6']
                  as String?;
Map<String, dynamic> constructorWithOptionalParametersExampleToMap(
        i1.ConstructorWithOptionalParametersExample
            constructorWithOptionalParametersExample) =>
    {
      'property1': constructorWithOptionalParametersExample.property1,
      'property2': constructorWithOptionalParametersExample.property2,
      'property3': constructorWithOptionalParametersExample.property3,
      'property4': constructorWithOptionalParametersExample.property4
    };
i1.ConstructorWithOptionalParametersExample
    mapToConstructorWithOptionalParametersExample(
            Map<String, dynamic> constructorWithOptionalParametersExampleMap) =>
        i1.ConstructorWithOptionalParametersExample(
            constructorWithOptionalParametersExampleMap['property1'] as String,
            constructorWithOptionalParametersExampleMap['property2'] as String?)
          ..property3 =
              constructorWithOptionalParametersExampleMap['property3'] as String
          ..property4 = constructorWithOptionalParametersExampleMap['property4']
              as String?;
Map<String, dynamic>
    constructorWithRequiredPositionalParametersAndOptionalParametersExampleToMap(
            i1.ConstructorWithRequiredPositionalParametersAndOptionalParametersExample
                constructorWithRequiredPositionalParametersAndOptionalParametersExample) =>
        {
          'property1':
              constructorWithRequiredPositionalParametersAndOptionalParametersExample
                  .property1,
          'property2':
              constructorWithRequiredPositionalParametersAndOptionalParametersExample
                  .property2,
          'property3':
              constructorWithRequiredPositionalParametersAndOptionalParametersExample
                  .property3,
          'property4':
              constructorWithRequiredPositionalParametersAndOptionalParametersExample
                  .property4,
          'property5':
              constructorWithRequiredPositionalParametersAndOptionalParametersExample
                  .property5,
          'property6':
              constructorWithRequiredPositionalParametersAndOptionalParametersExample
                  .property6
        };
i1.ConstructorWithRequiredPositionalParametersAndOptionalParametersExample
    mapToConstructorWithRequiredPositionalParametersAndOptionalParametersExample(
            Map<String, dynamic>
                constructorWithRequiredPositionalParametersAndOptionalParametersExampleMap) =>
        i1.ConstructorWithRequiredPositionalParametersAndOptionalParametersExample(
            constructorWithRequiredPositionalParametersAndOptionalParametersExampleMap[
                'property1'] as String,
            constructorWithRequiredPositionalParametersAndOptionalParametersExampleMap[
                'property2'] as String?,
            constructorWithRequiredPositionalParametersAndOptionalParametersExampleMap[
                'property3'] as String,
            constructorWithRequiredPositionalParametersAndOptionalParametersExampleMap[
                'property4'] as String?)
          ..property5 =
              constructorWithRequiredPositionalParametersAndOptionalParametersExampleMap[
                  'property5'] as String
          ..property6 =
              constructorWithRequiredPositionalParametersAndOptionalParametersExampleMap[
                  'property6'] as String?;
Map<String, dynamic>
    namedConstructorWithRequiredPositionalParametersAndNamedParametersExampleToMap(
            i1.NamedConstructorWithRequiredPositionalParametersAndNamedParametersExample
                namedConstructorWithRequiredPositionalParametersAndNamedParametersExample) =>
        {
          'property1':
              namedConstructorWithRequiredPositionalParametersAndNamedParametersExample
                  .property1,
          'property2':
              namedConstructorWithRequiredPositionalParametersAndNamedParametersExample
                  .property2,
          'property3':
              namedConstructorWithRequiredPositionalParametersAndNamedParametersExample
                  .property3,
          'property4':
              namedConstructorWithRequiredPositionalParametersAndNamedParametersExample
                  .property4,
          'property5':
              namedConstructorWithRequiredPositionalParametersAndNamedParametersExample
                  .property5,
          'property6':
              namedConstructorWithRequiredPositionalParametersAndNamedParametersExample
                  .property6
        };
i1.NamedConstructorWithRequiredPositionalParametersAndNamedParametersExample
    mapToNamedConstructorWithRequiredPositionalParametersAndNamedParametersExample(
            Map<String, dynamic>
                namedConstructorWithRequiredPositionalParametersAndNamedParametersExampleMap) =>
        i1.NamedConstructorWithRequiredPositionalParametersAndNamedParametersExample.name(
            namedConstructorWithRequiredPositionalParametersAndNamedParametersExampleMap['property1']
                as String,
            namedConstructorWithRequiredPositionalParametersAndNamedParametersExampleMap['property2']
                as String?,
            property3: namedConstructorWithRequiredPositionalParametersAndNamedParametersExampleMap['property3']
                as String,
            property4: namedConstructorWithRequiredPositionalParametersAndNamedParametersExampleMap['property4']
                as String?)
          ..property5 =
              namedConstructorWithRequiredPositionalParametersAndNamedParametersExampleMap[
                  'property5'] as String
          ..property6 =
              namedConstructorWithRequiredPositionalParametersAndNamedParametersExampleMap['property6'] as String?;
Map<String, dynamic>
    namedConstructorWithRequiredPositionalParametersAndOptionalParametersExampleToMap(
            i1.NamedConstructorWithRequiredPositionalParametersAndOptionalParametersExample
                namedConstructorWithRequiredPositionalParametersAndOptionalParametersExample) =>
        {
          'property1':
              namedConstructorWithRequiredPositionalParametersAndOptionalParametersExample
                  .property1,
          'property2':
              namedConstructorWithRequiredPositionalParametersAndOptionalParametersExample
                  .property2,
          'property3':
              namedConstructorWithRequiredPositionalParametersAndOptionalParametersExample
                  .property3,
          'property4':
              namedConstructorWithRequiredPositionalParametersAndOptionalParametersExample
                  .property4,
          'property5':
              namedConstructorWithRequiredPositionalParametersAndOptionalParametersExample
                  .property5,
          'property6':
              namedConstructorWithRequiredPositionalParametersAndOptionalParametersExample
                  .property6
        };
i1.NamedConstructorWithRequiredPositionalParametersAndOptionalParametersExample
    mapToNamedConstructorWithRequiredPositionalParametersAndOptionalParametersExample(
            Map<String, dynamic>
                namedConstructorWithRequiredPositionalParametersAndOptionalParametersExampleMap) =>
        i1.NamedConstructorWithRequiredPositionalParametersAndOptionalParametersExample.name(
            namedConstructorWithRequiredPositionalParametersAndOptionalParametersExampleMap[
                'property1'] as String,
            namedConstructorWithRequiredPositionalParametersAndOptionalParametersExampleMap[
                'property2'] as String?,
            namedConstructorWithRequiredPositionalParametersAndOptionalParametersExampleMap[
                'property3'] as String,
            namedConstructorWithRequiredPositionalParametersAndOptionalParametersExampleMap[
                'property4'] as String?)
          ..property5 =
              namedConstructorWithRequiredPositionalParametersAndOptionalParametersExampleMap[
                  'property5'] as String
          ..property6 =
              namedConstructorWithRequiredPositionalParametersAndOptionalParametersExampleMap[
                  'property6'] as String?;
